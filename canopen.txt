CANopen пока что сделан только для порта CAN0
В общие стандарты закидываем файлы:
array.c
mco_emcy.c
mco_nmt.c
mco_pdo.c
mco_sdoserver.c
mco_sdoclient.c
mco_sync.c
mco_task.c
array.h
mco_emcy.h
mco_nmt.h
mco_pdo.h
mco_sdo.h
mco_sync.h
mco_task.h

В общие стандарты MB91360 закидываем файлы:
mco_can.c
mco_can.h

В стандарты КТЕ:
mco_dict.c
mco_dict.h


***************************   slavedrv.h   ************************************

добавляем бит mcovkl:
union CAN_CONFIG
{
  byte all ;
  struct
  {
#ifndef _Union_FR
    unsigned int vkl     : 1 ;  // откл. CAN -  программ и контроллера.
    unsigned int mcovkl  : 1 ;
    unsigned int master  : 1 ;
    unsigned int bt_125k : 1 ;
    unsigned int bt_250k : 1 ;
    unsigned int bt_1M   : 1 ;
#else
    byte         rez1    : 1 ;
    byte         rez2    : 1 ;
    byte         bt_1M   : 1 ;
    byte         bt_250k : 1 ;
    byte         bt_125k : 1 ;
    byte         master  : 1 ;
    byte         mcovkl  : 1 ;
    byte         vkl     : 1 ;  // откл. CAN -  программ и контроллера.
#endif
  } _;
};
#define   _can_cfg_vkl         0x01
#define   _can_cfg_mcovkl      0x02
#define   _can_cfg_master      0x04
#define   _can_cfg_bt_125k     0x08
#define   _can_cfg_bt_250k     0x10
#define   _can_cfg_bt_1M       0x20

-------------------------------------------------------
добавляем поля index, objcode:
struct namevar
{
  word index;
  char *name;         /* имя данных (KOI - 8, OEM) */
  void *addr;         /* адpес данных */
  byte objcode;
  unsigned int lon;		/* длина данных  в байтах  */
  char type;          /*тип пеpеменной:
                              1-char, 1 байт
                              3-short, 2 байта
                          	  4-long, 4 байта
                              5-float, 4 байта
                              6-double, 8 байт
                              7-unsigned char, 1 байт
                              8-unsigned short, 2 байта
                              9-unsigned long, 4 байта
                              41-массив char,
                              42-массив short,
                              43-массив short,
                              44-массив long,
                              45-массив float,
                              46-массив double,
                              47-массив unsigned char,
                              48-массив unsigned short,
                              49-массив unsigned long,
                              77-битовая переменная (unsigned char)
                  */

  word  nom ;     /* Номинальная величина параметра */

  char  access ;  /* код доступа:
                         0-признак конца списка
                         1-только для чтения
                         2-для записи/чтения */
  char dscr;      /* Принятый от абонента дескриптор переменной. */
  word tag ;      /* Признак запроса дескриптора сервером. */

#ifdef ULTRALOGIK
  byte far *YesNo ;
//  byte Ok ;
#endif
};

*******************************************************************************

**********************   var_tab.h, sled.h, var_mtab.h   **********************

приводим к виду:

  { 0x2000, "r0_00",   (w*)&crezerv,      _VAR,   2, _SHORT_type,  0,  _READ_access },
  { 0x2001, "E",       &EDS_dop_kod,      _VAR,   2,_SHORT_type,  _Ud_Nom,  _READ_access },
  { 0x2002, "Ud",      &UdSr,             _VAR,   2, _SHORT_type,  _Ud_Nom,  _READ_access },
  и т.д.

*******************************************************************************

*************************   obj_def.h   ***************************************

добавляем:
#define _CANOPEN
-----------------
#ifdef _CANOPEN
   #define _MCO_CAN_IRQ
#endif

*******************************************************************************

****************************    include.h    **********************************

добавляем после slavedrv.h:

#ifdef   _CANOPEN
  #include "mco_task.h"
#endif

*******************************************************************************

**************************   inc362_2.c    ************************************

#define  _CANOPEN_INCLUDE
------------------------------------------------
#ifdef   _CANOPEN
  #include "array.c"
  #include "mco_can.c"
  #include "mco_dict.c"
  #include "mco_emcy.c"
  #include "mco_nmt.c"
  #include "mco_pdo.c"
  #include "mco_sdoserver.c"
  #include "mco_sdoclient.c"
  #include "mco_sync.c"
  #include "mco_task.c"
#endif

*******************************************************************************

************************   _main1.c   *****************************************

Заменяем инициализацию CANов:

	   can_init( _SecondCANPort );

#ifdef _CANOPEN
    if (can_setting(_WorkSlaveCANPort).config._.mcovkl == 1)
	   MCO_Init(_WorkSlaveCANPort);
	else
       can_init( _WorkSlaveCANPort );
#else
       can_init( _WorkSlaveCANPort );
#endif

  #ifdef _CAN2_Port
       can_init( _CAN2_Port );
  #endif

#ifdef _CANOPEN
  #ifdef _CAN_MASTER
    if (can_setting(_CAN_MASTER_PORT).config._.mcovkl == 0)
         can_master( _CAN_MASTER_PORT, 0);
  #endif
#else
  #ifdef _CAN_MASTER
    can_master( _CAN_MASTER_PORT, 0);
  #endif
#endif

--------------------------------------------------------------

Заменяем работу CANов в фоне:

#ifdef _CANOPEN

#ifdef _CAN_MASTER
    #if _CAN_MASTER_PORT == _CAN2_Port
        can_master( _CAN2_Port, 1 ) ;
 p(61) ;
        can_slave( _SecondCANPort ) ;
    if ( mco_vkl == 1)
	{
	   MCO_Background(_WorkSlaveCANPort);
	}
	else
        can_slave( _WorkSlaveCANPort ) ;

	#elif _CAN_MASTER_PORT == _SecondCANPort
        can_master( _SecondCANPort, 1 ) ;
 p(61) ;
    if ( mco_vkl == 1)
	   MCO_Background(_WorkSlaveCANPort);
	else
        can_slave( _WorkSlaveCANPort ) ;
        #ifdef _CAN2_Port
            can_slave( _CAN2_Port ) ;
        #endif
    #elif _CAN_MASTER_PORT == _WorkSlaveCANPort
    if ( mco_vkl == 1)
	   MCO_Background(_WorkSlaveCANPort);
	else
        can_master( _WorkSlaveCANPort, 1 ) ;
 p(61) ;
        can_slave( _SecondCANPort ) ;
        #ifdef _CAN2_Port
            can_slave( _CAN2_Port ) ;
        #endif
    #endif
#else
 p(61) ;
        can_slave( _SecondCANPort ) ;
        can_slave( _WorkSlaveCANPort ) ;
    #ifdef _CAN2_Port
        can_slave( _CAN2_Port ) ;
    #endif
#endif

#else

#ifdef _CAN_MASTER
    #if _CAN_MASTER_PORT == _CAN2_Port
        can_master( _CAN2_Port, 1 ) ;
 p(61) ;
        can_slave( _SecondCANPort ) ;
        can_slave( _WorkSlaveCANPort ) ;
    #elif _CAN_MASTER_PORT == _SecondCANPort
        can_master( _SecondCANPort, 1 ) ;
 p(61) ;
        can_slave( _WorkSlaveCANPort ) ;
        #ifdef _CAN2_Port
            can_slave( _CAN2_Port ) ;
        #endif
    #elif _CAN_MASTER_PORT == _WorkSlaveCANPort
        can_master( _WorkSlaveCANPort, 1 ) ;
 p(61) ;
        can_slave( _SecondCANPort ) ;
        #ifdef _CAN2_Port
            can_slave( _CAN2_Port ) ;
        #endif
    #endif
#else
 p(61) ;
        can_slave( _SecondCANPort ) ;
        can_slave( _WorkSlaveCANPort ) ;
    #ifdef _CAN2_Port
        can_slave( _CAN2_Port ) ;
    #endif
#endif

#endif

*******************************************************************************

****************************   extern.h    **********************************

#ifdef _CANOPEN
#define _KTE_A8_CAN0cfg \
    { "CAN0-config " , &can_setting( _CAN0_Port ).config.all, 5 ,           \
                               {                                            \
			   	 "Вкл.CAN     " ,                           \
                                 "Вкл.CANopen " ,                           \
                                 "125кГц-500м " ,                           \
                                 "250кГц-250м " ,                           \
                                 "1МГц  - 25м " },                          \
      { _can_cfg_vkl,_can_cfg_mcovkl, _can_cfg_bt_125k, _can_cfg_bt_250k, _can_cfg_bt_1M }, \
      {(w*)&_Msk},1                                                         \
    }
#else
#define _KTE_A8_CAN0cfg \
    { "CAN0-config " , &can_setting( _CAN0_Port ).config.all, 4 ,           \
                               {                                            \
			   	 "Вкл.CAN     " ,                           \
                                 "125кГц-500м " ,                           \
                                 "250кГц-250м " ,                           \
                                 "1МГц  - 25м " },                          \
      { _can_cfg_vkl, _can_cfg_bt_125k, _can_cfg_bt_250k, _can_cfg_bt_1M }, \
      {(w*)&_Msk},1                                                         \
    }
#endif


*******************************************************************************

********************   can_code.h   *******************************************

добавляем условную компиляцию
#ifndef  _CANOPEN
	#define  _CHAR_type           1   // 1-char, 1 байт
	#define  _INT_type            2   // 2-int, 2 байта
	#define  _SHORT_type          3   // 3-short, 2 байта
	#define  _LONG_type           4   // 4-long, 4 байта
	#define  _FLOAT_type          5   // 5-float, 4 байта
	#define  _DOUBLE_type         6   // 6-double, 8 байт
	#define  _uCHAR_type          7   // 7-unsigned char, 1 байт
	#define  _uSHORT_type         8   // 8-unsigned short, 2 байта
	#define  _uLONG_type          9   // 9-unsigned long, 4 байта
	#define  _CHAR_array_type    41   // 41-массив char,
	#define  _SHORT_array_type   42   // 42-массив short,
	#define  _SHORT2_array_type  43   // 43-массив short,
	#define  _LONG_array_type    44   // 44-массив long,
	#define  _FLOAT_array_type   45   // 45-массив float,
	#define  _DOUBLE_array_type  46   // 46-массив double,
	#define  _uCHAR_array_type   47   // 47-массив unsigned char,
	#define  _uSHORT_array_type  48   // 48-массив unsigned short,
	#define  _uLONG_array_type   49   // 49-массив unsigned long,
	//#define  _BIT_type           77   // 77-битовая переменная (unsigned char)
#endif

*******************************************************************************

*********************   can_drv.c   *******************************************

изменяем:

__interrupt  void CAN0_RX_Interrupt ( void )
{
  if ( can_setting(_CAN0_Port).config._.mcovkl == 0 )
  {
      canSlaveDrive(_CAN0_Port);
  }
  else
  {
	 ISR_CAN(_CAN0_Port);
  }
}

*******************************************************************************


